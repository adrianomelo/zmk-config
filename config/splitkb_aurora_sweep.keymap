/*
 * Copyright (c) 2022 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/keys.h>

&mt {
    //  flavor = "tap-preferred";
    // tapping-term-ms = <200>;

    tapping-term-ms = <500>;
};

/ {
    combos {
        compatible = "zmk,combos";

        combo_esc {
            timeout-ms = <50>;
            key-positions = <0 1>;
            bindings = <&kp ESC>;
        };

        combo_rcmd {
            timeout-ms = <50>;
            key-positions = <17 16>;
            bindings = <&kp RIGHT_COMMAND>;
        };

        combo_lcmd {
            timeout-ms = <50>;
            key-positions = <11 12>;
            bindings = <&kp LEFT_COMMAND>;
        };

        combo_loption {
            timeout-ms = <50>;
            key-positions = <12 13>;
            bindings = <&kp LEFT_ALT>;
        };

        combo_roption {
            timeout-ms = <50>;
            key-positions = <17 18>;
            bindings = <&kp RIGHT_ALT>;
        };

        combo_rcontrol {
            bindings = <&kp RIGHT_CONTROL>;
            key-positions = <18 19>;
        };

        combo_lcontrol {
            bindings = <&kp LEFT_CONTROL>;
            key-positions = <10 11>;
        };

        combo_lshift {
            bindings = <&kp LEFT_SHIFT>;
            key-positions = <20 21>;
        };

        combo_rshift {
            bindings = <&kp RIGHT_SHIFT>;
            key-positions = <29 28>;
        };

        combo_toggle1 {
            bindings = <&tog 2>;
            key-positions = <5 6>;
        };

        combo_layer2 {
            bindings = <&tog 0>;
            key-positions = <6 7>;
        };

        combo_raltcmd {
            bindings = <&kt RG(RIGHT_ALT)>;
            key-positions = <16 17 18>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            bindings = <
&kp Q      &kp W          &kp E  &kp R  &kp T    &kp Y  &kp U    &kp I      &kp O      &kp P
&kp A      &kp S          &kp D  &kp F  &kp G    &kp H  &lt 1 J  &kp K      &kp L      &kp SEMICOLON
&kp Z      &kp X          &kp C  &kp V  &kp B    &kp N  &kp M    &kp COMMA  &kp DOT    &kp SLASH
&kp SPACE  &kp BACKSPACE                                                    &lt 2 TAB  &kp RET
            >;
        };

        prog_layer {
            bindings = <
&kp ESCAPE     &trans            &kp LEFT_BRACE        &kp RIGHT_BRACE        &kp PIPE         &trans  &trans  &trans  &trans  &kp TILDE
&kp LESS_THAN  &kp GREATER_THAN  &kp LEFT_PARENTHESIS  &kp RIGHT_PARENTHESIS  &kp AMPERSAND    &trans  &trans  &trans  &trans  &kp SQT
&trans         &trans            &kp LEFT_BRACKET      &kp RIGHT_BRACKET      &kp EQUAL        &trans  &trans  &trans  &trans  &kp BACKSLASH
&trans         &trans                                                                                                  &trans  &kp RIGHT_SHIFT
            >;
        };

        numbers_layer {
            bindings = <
&kp N1        &kp N2  &kp N3    &kp N4     &kp N5    &kp N6  &kp N7        &kp N8    &kp N9  &kp N0
&kp NUMBER_6  &kp N7  &kp N8    &kp N9     &kp N0    &trans  &trans        &trans    &trans  &trans
&trans        &trans  &kp LEFT  &kp RIGHT  &trans    &trans  &kp UP_ARROW  &kp DOWN  &trans  &trans
&trans        &trans                                                                 &trans  &trans
            >;
        };

        layer_3 {
            bindings = <
&trans  &trans  &trans  &trans  &trans    &trans  &trans  &trans  &trans        &trans
&trans  &trans  &trans  &trans  &trans    &trans  &trans  &trans  &trans        &trans
&trans  &trans  &trans  &trans  &trans    &trans  &trans  &trans  &trans        &trans
&trans  &trans                                                    &kp C_VOL_DN  &kp C_VOLUME_UP
            >;
        };
    };
};
